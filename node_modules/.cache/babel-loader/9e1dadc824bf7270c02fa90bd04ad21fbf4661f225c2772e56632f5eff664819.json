{"ast":null,"code":"var _jsxFileName = \"/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n_c = WhiteboardContainer;\nconst GridDot = styled(motion.circle)`\n  fill: ${props => props.theme.terminal.text}20;\n`;\n\n// Create a component for the animated grid\n_c2 = GridDot;\nconst AnimatedGrid = ({\n  cols,\n  rows\n}) => {\n  const spacing = 24; // Same as our previous grid spacing\n  const dotSize = 2; // 1px radius for each dot\n\n  // Calculate number of dots needed based on screen size\n  const dotsArray = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      dotsArray.push({\n        x,\n        y\n      });\n    }\n  }\n\n  // Calculate delay based on position (ripple effect)\n  const getDelay = (x, y) => {\n    // Distance from top-left corner determines delay\n    const distance = Math.sqrt(x * x + y * y);\n    return distance * 0.1; // 100ms per \"step\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none'\n    },\n    children: dotsArray.map(({\n      x,\n      y\n    }) => /*#__PURE__*/_jsxDEV(GridDot, {\n      cx: x * spacing,\n      cy: y * spacing,\n      r: 1,\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.3,\n        delay: getDelay(x, y),\n        ease: \"easeOut\"\n      }\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c3 = AnimatedGrid;\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst Whiteboard = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [gridDimensions, setGridDimensions] = useState({\n    cols: 0,\n    rows: 0\n  });\n\n  // Calculate grid dimensions on mount and resize\n  useEffect(() => {\n    const calculateDimensions = () => {\n      const cols = Math.ceil(window.innerWidth / 24) + 1;\n      const rows = Math.ceil(window.innerHeight / 24) + 1;\n      setGridDimensions({\n        cols,\n        rows\n      });\n    };\n    calculateDimensions();\n    window.addEventListener('resize', calculateDimensions);\n    return () => window.removeEventListener('resize', calculateDimensions);\n  }, []);\n  const handleDoubleClick = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y\n    };\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: {\n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n  const onConnect = useCallback(params => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AnimatedGrid, {\n      cols: gridDimensions.cols,\n      rows: gridDimensions.rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: nodeTypes,\n      onDoubleClick: handleDoubleClick,\n      zoomOnDoubleClick: false,\n      fitView: false,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onNodeDragStart: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: true\n          }\n        } : n));\n      },\n      onNodeDragStop: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: false\n          }\n        } : n));\n      },\n      children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"r/BzARr8stqdSCY19PUN+k3fepk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c4 = Whiteboard;\nexport default Whiteboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WhiteboardContainer\");\n$RefreshReg$(_c2, \"GridDot\");\n$RefreshReg$(_c3, \"AnimatedGrid\");\n$RefreshReg$(_c4, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","Controls","styled","CustomNode","motion","jsxDEV","_jsxDEV","WhiteboardContainer","div","props","theme","terminal","bg","_c","GridDot","circle","text","_c2","AnimatedGrid","cols","rows","spacing","dotSize","dotsArray","y","x","push","getDelay","distance","Math","sqrt","style","position","top","left","width","height","pointerEvents","children","map","cx","cy","r","initial","opacity","animate","transition","duration","delay","ease","fileName","_jsxFileName","lineNumber","columnNumber","_c3","nodeTypes","custom","Whiteboard","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","setPosition","dragStart","setDragStart","isDragging","setIsDragging","gridDimensions","setGridDimensions","calculateDimensions","ceil","window","innerWidth","innerHeight","addEventListener","removeEventListener","handleDoubleClick","event","preventDefault","stopPropagation","reactFlowBounds","currentTarget","getBoundingClientRect","newPosition","clientX","clientY","newNodeId","Date","now","toString","newNode","id","type","data","content","onRemove","filter","n","onConnect","params","onDoubleClick","zoomOnDoubleClick","fitView","onNodeDragStart","_","node","onNodeDragStop","_c4","$RefreshReg$"],"sources":["/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState,\n  Controls\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport { motion } from 'framer-motion';\n\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\nconst GridDot = styled(motion.circle)`\n  fill: ${props => props.theme.terminal.text}20;\n`;\n\n// Create a component for the animated grid\nconst AnimatedGrid = ({ cols, rows }) => {\n  const spacing = 24; // Same as our previous grid spacing\n  const dotSize = 2; // 1px radius for each dot\n\n  // Calculate number of dots needed based on screen size\n  const dotsArray = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      dotsArray.push({ x, y });\n    }\n  }\n\n  // Calculate delay based on position (ripple effect)\n  const getDelay = (x, y) => {\n    // Distance from top-left corner determines delay\n    const distance = Math.sqrt(x * x + y * y);\n    return distance * 0.1; // 100ms per \"step\"\n  };\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      }}\n    >\n      {dotsArray.map(({ x, y }) => (\n        <GridDot\n          key={`${x}-${y}`}\n          cx={x * spacing}\n          cy={y * spacing}\n          r={1}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{\n            duration: 0.3,\n            delay: getDelay(x, y),\n            ease: \"easeOut\"\n          }}\n        />\n      ))}\n    </svg>\n  );\n};\n\nconst nodeTypes = {\n  custom: CustomNode\n};\n\nconst Whiteboard = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [gridDimensions, setGridDimensions] = useState({ cols: 0, rows: 0 });\n\n  // Calculate grid dimensions on mount and resize\n  useEffect(() => {\n    const calculateDimensions = () => {\n      const cols = Math.ceil(window.innerWidth / 24) + 1;\n      const rows = Math.ceil(window.innerHeight / 24) + 1;\n      setGridDimensions({ cols, rows });\n    };\n\n    calculateDimensions();\n    window.addEventListener('resize', calculateDimensions);\n    return () => window.removeEventListener('resize', calculateDimensions);\n  }, []);\n\n  const handleDoubleClick = useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y,\n    };\n\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: { \n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n\n  const onConnect = useCallback((params) => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n\n  return (\n    <WhiteboardContainer>\n      <AnimatedGrid cols={gridDimensions.cols} rows={gridDimensions.rows} />\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        nodeTypes={nodeTypes}\n        onDoubleClick={handleDoubleClick}\n        zoomOnDoubleClick={false}\n        fitView={false}\n        style={{ width: '100%', height: '100%' }}\n        onNodeDragStart={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: true }}\n                : n\n            )\n          );\n        }}\n        onNodeDragStop={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: false }}\n                : n\n            )\n          );\n        }}\n      >\n        <Controls />\n      </ReactFlow>\n    </WhiteboardContainer>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}