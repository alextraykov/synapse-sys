{"ast":null,"code":"var _jsxFileName = \"/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n_c = WhiteboardContainer;\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst AnimatedBackground = styled(Background)`\n  .react-flow__background-pattern circle {\n    opacity: 0;\n    animation: fadeInDots 0.8s ease-out forwards;\n    animation-delay: calc(\n      (var(--x) + var(--y)) * 0.1s\n    );\n  }\n\n  @keyframes fadeInDots {\n    0% { opacity: 0; }\n    50% { opacity: 0.4; }\n    100% { opacity: 0.2; }\n  }\n`;\nconst Whiteboard = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleDoubleClick = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y\n    };\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: {\n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n  const onConnect = useCallback(params => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: nodeTypes,\n      onDoubleClick: handleDoubleClick,\n      zoomOnDoubleClick: false,\n      fitView: false,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onNodeDragStart: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: true\n          }\n        } : n));\n      },\n      onNodeDragStop: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: false\n          }\n        } : n));\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        gap: 24,\n        size: 2,\n        color: \"#d2d2d2\",\n        style: {\n          opacity: 0.2\n        },\n        variant: \"dots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"p0LJoh/RLgDILe/cJTrE/wG8gKY=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = Whiteboard;\nexport default Whiteboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"WhiteboardContainer\");\n$RefreshReg$(_c2, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","useNodesState","useEdgesState","Background","Controls","styled","CustomNode","jsxDEV","_jsxDEV","WhiteboardContainer","div","props","theme","terminal","bg","_c","nodeTypes","custom","AnimatedBackground","Whiteboard","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","position","setPosition","x","y","handleDoubleClick","event","preventDefault","stopPropagation","reactFlowBounds","currentTarget","getBoundingClientRect","newPosition","clientX","left","clientY","top","newNodeId","Date","now","toString","newNode","id","type","data","content","onRemove","filter","n","onConnect","params","children","onDoubleClick","zoomOnDoubleClick","fitView","style","width","height","onNodeDragStart","_","node","map","isDragging","onNodeDragStop","gap","size","color","opacity","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState,\n  Background,\n  Controls\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\n\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\nconst nodeTypes = {\n  custom: CustomNode\n};\n\nconst AnimatedBackground = styled(Background)`\n  .react-flow__background-pattern circle {\n    opacity: 0;\n    animation: fadeInDots 0.8s ease-out forwards;\n    animation-delay: calc(\n      (var(--x) + var(--y)) * 0.1s\n    );\n  }\n\n  @keyframes fadeInDots {\n    0% { opacity: 0; }\n    50% { opacity: 0.4; }\n    100% { opacity: 0.2; }\n  }\n`;\n\nconst Whiteboard = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  const handleDoubleClick = useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y,\n    };\n\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: { \n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n\n  const onConnect = useCallback((params) => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n\n  return (\n    <WhiteboardContainer>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        nodeTypes={nodeTypes}\n        onDoubleClick={handleDoubleClick}\n        zoomOnDoubleClick={false}\n        fitView={false}\n        style={{ width: '100%', height: '100%' }}\n        onNodeDragStart={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: true }}\n                : n\n            )\n          );\n        }}\n        onNodeDragStop={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: false }}\n                : n\n            )\n          );\n        }}\n      >\n        <Background \n          gap={24}\n          size={2}\n          color=\"#d2d2d2\"\n          style={{ opacity: 0.2 }}\n          variant=\"dots\"\n        />\n        <Controls />\n      </ReactFlow>\n    </WhiteboardContainer>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}