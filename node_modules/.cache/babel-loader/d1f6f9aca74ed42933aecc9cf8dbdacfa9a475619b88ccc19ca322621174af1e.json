{"ast":null,"code":"var _jsxFileName = \"/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, Controls, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n_c = WhiteboardContainer;\nconst GridDot = styled(motion.circle)`\n  fill: #0EF928;\n`;\n\n// Create a component for the animated grid\n_c2 = GridDot;\nconst AnimatedGrid = ({\n  cols,\n  rows\n}) => {\n  const spacing = 24; // Same as our previous grid spacing\n  const dotSize = 2; // 1px radius for each dot\n\n  // Calculate number of dots needed based on screen size\n  const dotsArray = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      dotsArray.push({\n        x,\n        y\n      });\n    }\n  }\n\n  // Calculate delay based on position (ripple effect)\n  const getDelay = (x, y) => {\n    // Distance from top-left corner determines delay\n    const distance = Math.sqrt(x * x + y * y);\n    return distance * 0.1; // 100ms per \"step\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none'\n    },\n    children: dotsArray.map(({\n      x,\n      y\n    }) => /*#__PURE__*/_jsxDEV(GridDot, {\n      cx: x * spacing,\n      cy: y * spacing,\n      r: 1,\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 0.2\n      },\n      transition: {\n        duration: 0.6,\n        delay: getDelay(x, y),\n        ease: \"easeOut\",\n        opacity: {\n          times: [0, 0.5, 1],\n          values: [0, 1, 0.2]\n        }\n      }\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// Add a styled Background component\n_c3 = AnimatedGrid;\nconst AnimatedBackground = styled(Background)`\n  && .react-flow__background-pattern circle {\n    fill: #0EF928;\n    opacity: 0;\n    animation: dotAppear 1.2s ease-out forwards;\n    animation-delay: calc(\n      (\n        ${props => {\n  var _props$offset;\n  return Math.floor(((_props$offset = props.offset) === null || _props$offset === void 0 ? void 0 : _props$offset.x) / 24 || 0);\n}} * 0.2s + \n        ${props => {\n  var _props$offset2;\n  return Math.floor(((_props$offset2 = props.offset) === null || _props$offset2 === void 0 ? void 0 : _props$offset2.y) / 24 || 0);\n}} * 0.2s\n      )\n    );\n  }\n\n  @keyframes dotAppear {\n    0% { opacity: 0; }\n    40% { opacity: 1; }\n    100% { opacity: 0.2; }\n  }\n`;\n_c4 = AnimatedBackground;\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst Whiteboard = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [gridDimensions, setGridDimensions] = useState({\n    cols: 0,\n    rows: 0\n  });\n\n  // Calculate grid dimensions on mount and resize\n  useEffect(() => {\n    const calculateDimensions = () => {\n      const cols = Math.ceil(window.innerWidth / 24) + 1;\n      const rows = Math.ceil(window.innerHeight / 24) + 1;\n      setGridDimensions({\n        cols,\n        rows\n      });\n    };\n    calculateDimensions();\n    window.addEventListener('resize', calculateDimensions);\n    return () => window.removeEventListener('resize', calculateDimensions);\n  }, []);\n  const handleDoubleClick = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y\n    };\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: {\n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n  const onConnect = useCallback(params => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AnimatedGrid, {\n      cols: gridDimensions.cols,\n      rows: gridDimensions.rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: nodeTypes,\n      onDoubleClick: handleDoubleClick,\n      zoomOnDoubleClick: false,\n      fitView: false,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onNodeDragStart: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: true\n          }\n        } : n));\n      },\n      onNodeDragStop: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: false\n          }\n        } : n));\n      },\n      children: [/*#__PURE__*/_jsxDEV(AnimatedBackground, {\n        gap: 24,\n        size: 2,\n        color: \"#0EF928\",\n        variant: \"dots\",\n        offset: {\n          x: position.x,\n          y: position.y\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"r/BzARr8stqdSCY19PUN+k3fepk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c5 = Whiteboard;\nexport default Whiteboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"WhiteboardContainer\");\n$RefreshReg$(_c2, \"GridDot\");\n$RefreshReg$(_c3, \"AnimatedGrid\");\n$RefreshReg$(_c4, \"AnimatedBackground\");\n$RefreshReg$(_c5, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","Controls","Background","styled","CustomNode","motion","jsxDEV","_jsxDEV","WhiteboardContainer","div","props","theme","terminal","bg","_c","GridDot","circle","_c2","AnimatedGrid","cols","rows","spacing","dotSize","dotsArray","y","x","push","getDelay","distance","Math","sqrt","style","position","top","left","width","height","pointerEvents","children","map","cx","cy","r","initial","opacity","animate","transition","duration","delay","ease","times","values","fileName","_jsxFileName","lineNumber","columnNumber","_c3","AnimatedBackground","_props$offset","floor","offset","_props$offset2","_c4","nodeTypes","custom","Whiteboard","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","setPosition","dragStart","setDragStart","isDragging","setIsDragging","gridDimensions","setGridDimensions","calculateDimensions","ceil","window","innerWidth","innerHeight","addEventListener","removeEventListener","handleDoubleClick","event","preventDefault","stopPropagation","reactFlowBounds","currentTarget","getBoundingClientRect","newPosition","clientX","clientY","newNodeId","Date","now","toString","newNode","id","type","data","content","onRemove","filter","n","onConnect","params","onDoubleClick","zoomOnDoubleClick","fitView","onNodeDragStart","_","node","onNodeDragStop","gap","size","color","variant","_c5","$RefreshReg$"],"sources":["/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState,\n  Controls,\n  Background\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport { motion } from 'framer-motion';\n\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\nconst GridDot = styled(motion.circle)`\n  fill: #0EF928;\n`;\n\n// Create a component for the animated grid\nconst AnimatedGrid = ({ cols, rows }) => {\n  const spacing = 24; // Same as our previous grid spacing\n  const dotSize = 2; // 1px radius for each dot\n\n  // Calculate number of dots needed based on screen size\n  const dotsArray = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      dotsArray.push({ x, y });\n    }\n  }\n\n  // Calculate delay based on position (ripple effect)\n  const getDelay = (x, y) => {\n    // Distance from top-left corner determines delay\n    const distance = Math.sqrt(x * x + y * y);\n    return distance * 0.1; // 100ms per \"step\"\n  };\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      }}\n    >\n      {dotsArray.map(({ x, y }) => (\n        <GridDot\n          key={`${x}-${y}`}\n          cx={x * spacing}\n          cy={y * spacing}\n          r={1}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 0.2 }}\n          transition={{\n            duration: 0.6,\n            delay: getDelay(x, y),\n            ease: \"easeOut\",\n            opacity: {\n              times: [0, 0.5, 1],\n              values: [0, 1, 0.2]\n            }\n          }}\n        />\n      ))}\n    </svg>\n  );\n};\n\n// Add a styled Background component\nconst AnimatedBackground = styled(Background)`\n  && .react-flow__background-pattern circle {\n    fill: #0EF928;\n    opacity: 0;\n    animation: dotAppear 1.2s ease-out forwards;\n    animation-delay: calc(\n      (\n        ${props => Math.floor(props.offset?.x / 24 || 0)} * 0.2s + \n        ${props => Math.floor(props.offset?.y / 24 || 0)} * 0.2s\n      )\n    );\n  }\n\n  @keyframes dotAppear {\n    0% { opacity: 0; }\n    40% { opacity: 1; }\n    100% { opacity: 0.2; }\n  }\n`;\n\nconst nodeTypes = {\n  custom: CustomNode\n};\n\nconst Whiteboard = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [gridDimensions, setGridDimensions] = useState({ cols: 0, rows: 0 });\n\n  // Calculate grid dimensions on mount and resize\n  useEffect(() => {\n    const calculateDimensions = () => {\n      const cols = Math.ceil(window.innerWidth / 24) + 1;\n      const rows = Math.ceil(window.innerHeight / 24) + 1;\n      setGridDimensions({ cols, rows });\n    };\n\n    calculateDimensions();\n    window.addEventListener('resize', calculateDimensions);\n    return () => window.removeEventListener('resize', calculateDimensions);\n  }, []);\n\n  const handleDoubleClick = useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    const newPosition = {\n      x: event.clientX - reactFlowBounds.left - position.x,\n      y: event.clientY - reactFlowBounds.top - position.y,\n    };\n\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: { \n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position]);\n\n  const onConnect = useCallback((params) => {\n    setEdges(edges => [...edges, params]);\n  }, []);\n\n  return (\n    <WhiteboardContainer>\n      <AnimatedGrid cols={gridDimensions.cols} rows={gridDimensions.rows} />\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        nodeTypes={nodeTypes}\n        onDoubleClick={handleDoubleClick}\n        zoomOnDoubleClick={false}\n        fitView={false}\n        style={{ width: '100%', height: '100%' }}\n        onNodeDragStart={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: true }}\n                : n\n            )\n          );\n        }}\n        onNodeDragStop={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: false }}\n                : n\n            )\n          );\n        }}\n      >\n        <AnimatedBackground\n          gap={24}\n          size={2}\n          color=\"#0EF928\"\n          variant=\"dots\"\n          offset={{\n            x: position.x,\n            y: position.y\n          }}\n        />\n        <Controls />\n      </ReactFlow>\n    </WhiteboardContainer>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}