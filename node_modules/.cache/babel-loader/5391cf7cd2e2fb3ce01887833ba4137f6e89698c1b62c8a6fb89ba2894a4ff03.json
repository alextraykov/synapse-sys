{"ast":null,"code":"var _jsxFileName = \"/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef, useMemo } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, Controls, MarkerType, getSmoothStepPath } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\n// Create an SVG pattern for infinite dots\n_c = WhiteboardContainer;\nconst DotGrid = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n\n  svg {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\n// Add a component for the initial loading animation\n_c2 = DotGrid;\nconst LoadingGrid = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n`;\n_c3 = LoadingGrid;\nconst LoadingDot = styled.circle`\n  opacity: 0;\n  animation: fadeInDot 0.15s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;\n  animation-delay: ${props => props.delay}s;\n\n  @keyframes fadeInDot {\n    0% { \n      opacity: 0;\n      transform: scale(0.95);\n    }\n    50% { \n      opacity: 1;\n      fill: #0EF928;\n      transform: scale(1.1);\n    }\n    100% { \n      opacity: 0.4;\n      fill: #ababab;\n      transform: scale(1);\n    }\n  }\n`;\n\n// Add new styled component for ripple effect\n_c4 = LoadingDot;\nconst RippleDot = styled.circle`\n  animation: rippleEffect 0.5s ease-out forwards;\n  animation-delay: ${props => props.delay}s;\n  \n  @keyframes rippleEffect {\n    0% { \n      opacity: 0.2;\n      fill: #d2d2d2;\n    }\n    50% { \n      opacity: 0.5;\n      fill: #0EF928;\n    }\n    100% { \n      opacity: 0.2;\n      fill: #d2d2d2;\n    }\n  }\n`;\n\n// Add new styled component for vignette\nconst VignetteOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  background: radial-gradient(\n    circle at center,\n    transparent 0%,\n    transparent 60%,\n    rgba(0, 0, 0, 0.4) 100%\n  );\n  z-index: 1; // Above canvas but below navbar\n`;\n\n// Fix styled component using a transient prop\n_c5 = VignetteOverlay;\nconst AnimatedComponent = styled.div`\n  animation: ${props => props.$delay ? `fadeIn ${props.$delay}s` : 'none'};\n  // other styles...\n`;\n\n// Custom edge component matching your terminal theme\nconst CustomEdge = ({\n  id,\n  source,\n  target,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {}\n}) => {\n  // Calculate the path\n  const [edgePath] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      style: {\n        stroke: 'rgba(14, 249, 40, 0.2)',\n        strokeWidth: 6,\n        filter: 'blur(4px)'\n      },\n      d: edgePath,\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      style: {\n        stroke: '#0EF928',\n        strokeWidth: 2,\n        strokeDasharray: '5,5',\n        ...style\n      },\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: \"url(#terminal-arrow)\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c6 = CustomEdge;\nconst Whiteboard = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [rippleCenter, setRippleCenter] = useState(null);\n  const [showRipple, setShowRipple] = useState(false);\n  const [selectedEdges, setSelectedEdges] = useState([]);\n\n  // Calculate grid dimensions based on viewport\n  const gridSize = {\n    cols: Math.ceil(window.innerWidth / 24) + 1,\n    rows: Math.ceil(window.innerHeight / 24) + 1\n  };\n\n  // Create array of dots for loading animation\n  const dots = [];\n  for (let y = 0; y < gridSize.rows; y++) {\n    for (let x = 0; x < gridSize.cols; x++) {\n      dots.push({\n        x,\n        y\n      });\n    }\n  }\n\n  // Switch to infinite grid after animation\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, (Math.sqrt(gridSize.cols * gridSize.cols + gridSize.rows * gridSize.rows) * 0.05 + 0.15) * 1000);\n    return () => clearTimeout(timer);\n  }, [gridSize.cols, gridSize.rows]);\n\n  // Calculate pattern offset based on canvas position\n  const patternOffset = {\n    x: position.x % (24 * zoom),\n    y: position.y % (24 * zoom)\n  };\n\n  // Update pattern size based on zoom\n  const patternSize = 24 * zoom;\n  const dotSize = 1 * zoom;\n  const handleDoubleClick = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    // Adjust click position based on canvas position and zoom\n    const clickX = (event.clientX - reactFlowBounds.left - position.x) / zoom;\n    const clickY = (event.clientY - reactFlowBounds.top - position.y) / zoom;\n\n    // Calculate which dot was closest to the click, accounting for dot center\n    const dotX = Math.round((clickX - 1) / 24) * 24 + 1;\n    const dotY = Math.round((clickY - 1) / 24) * 24 + 1;\n    setRippleCenter({\n      x: dotX * zoom + position.x,\n      y: dotY * zoom + position.y\n    });\n    setShowRipple(true);\n\n    // Hide ripple after animation\n    setTimeout(() => {\n      setShowRipple(false);\n    }, 500);\n\n    // Create new node\n    const newPosition = {\n      x: (event.clientX - reactFlowBounds.left - position.x) / zoom,\n      y: (event.clientY - reactFlowBounds.top - position.y) / zoom\n    };\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: {\n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position, zoom]);\n\n  // Define edge types\n  const edgeTypes = useMemo(() => ({\n    custom: CustomEdge\n  }), []);\n\n  // Updated onConnect function\n  const onConnect = useCallback(params => {\n    // Create a custom edge with your styling\n    setEdges(edges => [...edges, {\n      ...params,\n      type: 'custom',\n      animated: true,\n      style: {\n        stroke: '#0EF928',\n        strokeDasharray: '5,5'\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        color: '#0EF928',\n        width: 20,\n        height: 20\n      }\n    }]);\n  }, []);\n\n  // Memoize nodeTypes and edgeTypes to prevent recreation on each render\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n\n  // Handle edge click\n  const onEdgeClick = useCallback((event, edge) => {\n    event.stopPropagation();\n    setSelectedEdges(prev => prev.includes(edge.id) ? prev.filter(id => id !== edge.id) : [...prev, edge.id]);\n  }, []);\n\n  // Process edges with selection state\n  const processedEdges = useMemo(() => {\n    return edges.map(edge => {\n      const isSelected = selectedEdges.includes(edge.id);\n      return {\n        ...edge,\n        style: {\n          ...edge.style,\n          stroke: isSelected ? '#ffffff' : '#0EF928',\n          strokeWidth: isSelected ? 3 : 2,\n          filter: isSelected ? 'drop-shadow(0 0 12px rgba(255, 255, 255, 0.7))' : 'drop-shadow(0 0 8px rgba(14, 249, 40, 0.5))'\n        }\n      };\n    });\n  }, [edges, selectedEdges]);\n\n  // Handle canvas click to clear selection\n  const onPaneClick = useCallback(() => {\n    setSelectedEdges([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(VignetteOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      nodeCount: nodes.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(LoadingGrid, {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        children: dots.map(({\n          x,\n          y\n        }, i) => {\n          const distance = Math.sqrt(x * x + y * y);\n          return /*#__PURE__*/_jsxDEV(LoadingDot, {\n            cx: x * 24 + 1,\n            cy: y * 24 + 1,\n            r: 1,\n            fill: \"#ababab\",\n            delay: distance * 0.05\n          }, `${x}-${y}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DotGrid, {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n            id: \"dot-pattern\",\n            x: patternOffset.x,\n            y: patternOffset.y,\n            width: patternSize,\n            height: patternSize,\n            patternUnits: \"userSpaceOnUse\",\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: dotSize,\n              cy: dotSize,\n              r: dotSize,\n              fill: \"#ababab\",\n              fillOpacity: \"0.4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          width: \"100%\",\n          height: \"100%\",\n          fill: \"url(#dot-pattern)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: processedEdges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onEdgeClick: onEdgeClick,\n      onPaneClick: onPaneClick,\n      nodeTypes: nodeTypes,\n      edgeTypes: edgeTypes,\n      onDoubleClick: handleDoubleClick,\n      zoomOnDoubleClick: false,\n      fitView: false,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      onNodeDragStart: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: true\n          }\n        } : n));\n      },\n      onNodeDragStop: (_, node) => {\n        setNodes(nodes => nodes.map(n => n.id === node.id ? {\n          ...n,\n          data: {\n            ...n.data,\n            isDragging: false\n          }\n        } : n));\n      },\n      onMove: (_, viewState) => {\n        setPosition({\n          x: viewState.x,\n          y: viewState.y\n        });\n        setZoom(viewState.zoom);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          width: 0,\n          height: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"terminal-arrow\",\n            viewBox: \"0 0 10 10\",\n            refX: \"8\",\n            refY: \"5\",\n            markerWidth: \"6\",\n            markerHeight: \"6\",\n            orient: \"auto-start-reverse\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M 0 0 L 10 5 L 0 10 z\",\n              fill: \"#0EF928\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            @keyframes flowAnimation {\n              from {\n                stroke-dashoffset: 20;\n              }\n              to {\n                stroke-dashoffset: 0;\n              }\n            }\n            \n            .react-flow__edge-path {\n              animation: flowAnimation 1s linear infinite;\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"DVldCO1lMwSwHSrVpO2WsEGB6kQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c7 = Whiteboard;\nexport default Whiteboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"WhiteboardContainer\");\n$RefreshReg$(_c2, \"DotGrid\");\n$RefreshReg$(_c3, \"LoadingGrid\");\n$RefreshReg$(_c4, \"LoadingDot\");\n$RefreshReg$(_c5, \"VignetteOverlay\");\n$RefreshReg$(_c6, \"CustomEdge\");\n$RefreshReg$(_c7, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","useMemo","ReactFlow","useNodesState","useEdgesState","Controls","MarkerType","getSmoothStepPath","styled","CustomNode","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","WhiteboardContainer","div","props","theme","terminal","bg","_c","DotGrid","_c2","LoadingGrid","_c3","LoadingDot","circle","delay","_c4","RippleDot","VignetteOverlay","_c5","AnimatedComponent","$delay","CustomEdge","id","source","target","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","edgePath","children","stroke","strokeWidth","filter","d","fill","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","className","markerEnd","_c6","Whiteboard","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","position","setPosition","x","y","zoom","setZoom","isLoading","setIsLoading","rippleCenter","setRippleCenter","showRipple","setShowRipple","selectedEdges","setSelectedEdges","gridSize","cols","Math","ceil","window","innerWidth","rows","innerHeight","dots","push","timer","setTimeout","sqrt","clearTimeout","patternOffset","patternSize","dotSize","handleDoubleClick","event","preventDefault","stopPropagation","reactFlowBounds","currentTarget","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","dotX","round","dotY","newPosition","newNodeId","Date","now","toString","newNode","type","data","content","onRemove","n","edgeTypes","custom","onConnect","params","animated","ArrowClosed","color","width","height","nodeTypes","onEdgeClick","edge","prev","includes","processedEdges","map","isSelected","onPaneClick","nodeCount","length","i","distance","cx","cy","r","patternUnits","fillOpacity","onDoubleClick","zoomOnDoubleClick","fitView","onNodeDragStart","_","node","isDragging","onNodeDragStop","onMove","viewState","viewBox","refX","refY","markerWidth","markerHeight","orient","_c7","$RefreshReg$"],"sources":["/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, useMemo } from 'react';\nimport ReactFlow, { \n  useNodesState, \n  useEdgesState,\n  Controls,\n  MarkerType,\n  getSmoothStepPath\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport styled from 'styled-components';\nimport { CustomNode } from './NodeInput';\nimport Navbar from './Navbar';\n\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\n// Create an SVG pattern for infinite dots\nconst DotGrid = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n\n  svg {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\n// Add a component for the initial loading animation\nconst LoadingGrid = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n`;\n\nconst LoadingDot = styled.circle`\n  opacity: 0;\n  animation: fadeInDot 0.15s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;\n  animation-delay: ${props => props.delay}s;\n\n  @keyframes fadeInDot {\n    0% { \n      opacity: 0;\n      transform: scale(0.95);\n    }\n    50% { \n      opacity: 1;\n      fill: #0EF928;\n      transform: scale(1.1);\n    }\n    100% { \n      opacity: 0.4;\n      fill: #ababab;\n      transform: scale(1);\n    }\n  }\n`;\n\n// Add new styled component for ripple effect\nconst RippleDot = styled.circle`\n  animation: rippleEffect 0.5s ease-out forwards;\n  animation-delay: ${props => props.delay}s;\n  \n  @keyframes rippleEffect {\n    0% { \n      opacity: 0.2;\n      fill: #d2d2d2;\n    }\n    50% { \n      opacity: 0.5;\n      fill: #0EF928;\n    }\n    100% { \n      opacity: 0.2;\n      fill: #d2d2d2;\n    }\n  }\n`;\n\n// Add new styled component for vignette\nconst VignetteOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  background: radial-gradient(\n    circle at center,\n    transparent 0%,\n    transparent 60%,\n    rgba(0, 0, 0, 0.4) 100%\n  );\n  z-index: 1; // Above canvas but below navbar\n`;\n\n// Fix styled component using a transient prop\nconst AnimatedComponent = styled.div`\n  animation: ${props => props.$delay ? `fadeIn ${props.$delay}s` : 'none'};\n  // other styles...\n`;\n\n// Custom edge component matching your terminal theme\nconst CustomEdge = ({ \n  id, \n  source, \n  target, \n  sourceX, \n  sourceY, \n  targetX, \n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {} \n}) => {\n  // Calculate the path\n  const [edgePath] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n\n  return (\n    <>\n      {/* Optional glow effect layer */}\n      <path\n        style={{\n          stroke: 'rgba(14, 249, 40, 0.2)',\n          strokeWidth: 6,\n          filter: 'blur(4px)',\n        }}\n        d={edgePath}\n        fill=\"none\"\n      />\n      {/* Main edge path */}\n      <path\n        id={id}\n        style={{\n          stroke: '#0EF928',\n          strokeWidth: 2,\n          strokeDasharray: '5,5',\n          ...style,\n        }}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd=\"url(#terminal-arrow)\"\n        fill=\"none\"\n      />\n    </>\n  );\n};\n\nconst Whiteboard = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [rippleCenter, setRippleCenter] = useState(null);\n  const [showRipple, setShowRipple] = useState(false);\n  const [selectedEdges, setSelectedEdges] = useState([]);\n\n  // Calculate grid dimensions based on viewport\n  const gridSize = {\n    cols: Math.ceil(window.innerWidth / 24) + 1,\n    rows: Math.ceil(window.innerHeight / 24) + 1\n  };\n\n  // Create array of dots for loading animation\n  const dots = [];\n  for (let y = 0; y < gridSize.rows; y++) {\n    for (let x = 0; x < gridSize.cols; x++) {\n      dots.push({ x, y });\n    }\n  }\n\n  // Switch to infinite grid after animation\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, (Math.sqrt(gridSize.cols * gridSize.cols + gridSize.rows * gridSize.rows) * 0.05 + 0.15) * 1000);\n    return () => clearTimeout(timer);\n  }, [gridSize.cols, gridSize.rows]);\n\n  // Calculate pattern offset based on canvas position\n  const patternOffset = {\n    x: position.x % (24 * zoom),\n    y: position.y % (24 * zoom)\n  };\n\n  // Update pattern size based on zoom\n  const patternSize = 24 * zoom;\n  const dotSize = 1 * zoom;\n\n  const handleDoubleClick = useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const reactFlowBounds = event.currentTarget.getBoundingClientRect();\n    // Adjust click position based on canvas position and zoom\n    const clickX = (event.clientX - reactFlowBounds.left - position.x) / zoom;\n    const clickY = (event.clientY - reactFlowBounds.top - position.y) / zoom;\n\n    // Calculate which dot was closest to the click, accounting for dot center\n    const dotX = Math.round((clickX - 1) / 24) * 24 + 1;\n    const dotY = Math.round((clickY - 1) / 24) * 24 + 1;\n\n    setRippleCenter({ \n      x: (dotX * zoom) + position.x,\n      y: (dotY * zoom) + position.y\n    });\n    setShowRipple(true);\n\n    // Hide ripple after animation\n    setTimeout(() => {\n      setShowRipple(false);\n    }, 500);\n\n    // Create new node\n    const newPosition = {\n      x: (event.clientX - reactFlowBounds.left - position.x) / zoom,\n      y: (event.clientY - reactFlowBounds.top - position.y) / zoom,\n    };\n\n    const newNodeId = Date.now().toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newPosition,\n      data: { \n        content: '',\n        onRemove: () => {\n          setNodes(nodes => nodes.filter(n => n.id !== newNodeId));\n        }\n      }\n    };\n\n    setNodes(nodes => [...nodes, newNode]);\n  }, [position, zoom]);\n\n  // Define edge types\n  const edgeTypes = useMemo(() => ({\n    custom: CustomEdge\n  }), []);\n\n  // Updated onConnect function\n  const onConnect = useCallback((params) => {\n    // Create a custom edge with your styling\n    setEdges(edges => [\n      ...edges, \n      { \n        ...params,\n        type: 'custom',\n        animated: true,\n        style: {\n          stroke: '#0EF928',\n          strokeDasharray: '5,5',\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          color: '#0EF928',\n          width: 20,\n          height: 20,\n        }\n      }\n    ]);\n  }, []);\n\n  // Memoize nodeTypes and edgeTypes to prevent recreation on each render\n  const nodeTypes = useMemo(() => ({ \n    custom: CustomNode \n  }), []);\n\n  // Handle edge click\n  const onEdgeClick = useCallback((event, edge) => {\n    event.stopPropagation();\n    setSelectedEdges(prev => \n      prev.includes(edge.id) \n        ? prev.filter(id => id !== edge.id) \n        : [...prev, edge.id]\n    );\n  }, []);\n  \n  // Process edges with selection state\n  const processedEdges = useMemo(() => {\n    return edges.map(edge => {\n      const isSelected = selectedEdges.includes(edge.id);\n      return {\n        ...edge,\n        style: {\n          ...edge.style,\n          stroke: isSelected ? '#ffffff' : '#0EF928',\n          strokeWidth: isSelected ? 3 : 2,\n          filter: isSelected \n            ? 'drop-shadow(0 0 12px rgba(255, 255, 255, 0.7))' \n            : 'drop-shadow(0 0 8px rgba(14, 249, 40, 0.5))',\n        },\n      };\n    });\n  }, [edges, selectedEdges]);\n  \n  // Handle canvas click to clear selection\n  const onPaneClick = useCallback(() => {\n    setSelectedEdges([]);\n  }, []);\n\n  return (\n    <WhiteboardContainer>\n      <VignetteOverlay />\n      <Navbar nodeCount={nodes.length} />\n      {isLoading ? (\n        <LoadingGrid>\n          <svg width=\"100%\" height=\"100%\">\n            {dots.map(({ x, y }, i) => {\n              const distance = Math.sqrt(x * x + y * y);\n              return (\n                <LoadingDot\n                  key={`${x}-${y}`}\n                  cx={x * 24 + 1}\n                  cy={y * 24 + 1}\n                  r={1}\n                  fill=\"#ababab\"\n                  delay={distance * 0.05}\n                />\n              );\n            })}\n          </svg>\n        </LoadingGrid>\n      ) : (\n        <DotGrid>\n          <svg>\n            <defs>\n              <pattern \n                id=\"dot-pattern\" \n                x={patternOffset.x} \n                y={patternOffset.y} \n                width={patternSize} \n                height={patternSize} \n                patternUnits=\"userSpaceOnUse\"\n              >\n                <circle \n                  cx={dotSize} \n                  cy={dotSize} \n                  r={dotSize} \n                  fill=\"#ababab\" \n                  fillOpacity=\"0.4\"\n                />\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#dot-pattern)\" />\n          </svg>\n        </DotGrid>\n      )}\n      <ReactFlow\n        nodes={nodes}\n        edges={processedEdges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onEdgeClick={onEdgeClick}\n        onPaneClick={onPaneClick}\n        nodeTypes={nodeTypes}\n        edgeTypes={edgeTypes}\n        onDoubleClick={handleDoubleClick}\n        zoomOnDoubleClick={false}\n        fitView={false}\n        style={{ width: '100%', height: '100%' }}\n        onNodeDragStart={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: true }}\n                : n\n            )\n          );\n        }}\n        onNodeDragStop={(_, node) => {\n          setNodes(nodes => \n            nodes.map(n => \n              n.id === node.id \n                ? { ...n, data: { ...n.data, isDragging: false }}\n                : n\n            )\n          );\n        }}\n        onMove={(_, viewState) => {\n          setPosition({ x: viewState.x, y: viewState.y });\n          setZoom(viewState.zoom);\n        }}\n      >\n        <Controls />\n        \n        {/* Add SVG defs for custom markers */}\n        <svg style={{ position: 'absolute', width: 0, height: 0 }}>\n          <defs>\n            <marker\n              id=\"terminal-arrow\"\n              viewBox=\"0 0 10 10\"\n              refX=\"8\"\n              refY=\"5\"\n              markerWidth=\"6\"\n              markerHeight=\"6\"\n              orient=\"auto-start-reverse\"\n            >\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"#0EF928\" />\n            </marker>\n          </defs>\n        </svg>\n        \n        {/* Add keyframe animation */}\n        <style>\n          {`\n            @keyframes flowAnimation {\n              from {\n                stroke-dashoffset: 20;\n              }\n              to {\n                stroke-dashoffset: 0;\n              }\n            }\n            \n            .react-flow__edge-path {\n              animation: flowAnimation 1s linear infinite;\n            }\n          `}\n        </style>\n      </ReactFlow>\n    </WhiteboardContainer>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}