{"ast":null,"code":"var _jsxFileName = \"/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Node from './Node';\nimport { VscAdd } from 'react-icons/vsc';\nimport NodeInput from './NodeInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\n// Separate component for the grid pattern that moves with the canvas\n_c = WhiteboardContainer;\nconst GridPattern = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: radial-gradient(\n    circle at center,\n    ${props => props.theme.terminal.text}20 1px,\n    transparent 1px\n  );\n  background-size: 24px 24px;\n  background-position: ${props => props.x}px ${props => props.y}px;\n  pointer-events: none;\n  will-change: background-position;\n  transition: background-position 0.1s linear;\n`;\n_c2 = GridPattern;\nconst Canvas = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  cursor: grab;\n  &:active {\n    cursor: grabbing;\n  }\n`;\n_c3 = Canvas;\nconst AddButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: ${props => props.theme.terminal.bg};\n  color: ${props => props.theme.terminal.text};\n  border: 2px solid ${props => props.theme.terminal.border};\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 16px;\n  box-shadow: 0 0 5px ${props => props.theme.terminal.boxShadow};\n  z-index: 1000;\n  \n  &:hover {\n    background: ${props => props.theme.terminal.text};\n    color: ${props => props.theme.terminal.bg};\n  }\n`;\nconst Whiteboard = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const handleDoubleClick = e => {\n    if (e.target === e.currentTarget) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const newNode = {\n        id: Date.now(),\n        position: {\n          x: e.clientX - rect.left - position.x,\n          y: e.clientY - rect.top - position.y\n        }\n      };\n      setNodes(prevNodes => [...prevNodes, newNode]);\n    }\n  };\n  const handleNodeComplete = (nodeId, data) => {\n    if (!data) {\n      // Remove node if data is null (cancelled or deleted)\n      setNodes(prevNodes => prevNodes.filter(node => node.id !== nodeId));\n      return;\n    }\n\n    // Update node with completed data\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      ...data\n    } : node));\n  };\n  const handleNodeDragEnd = (nodeId, newPosition) => {\n    setNodes(prevNodes => prevNodes.map(node => node.id === nodeId ? {\n      ...node,\n      position: newPosition\n    } : node));\n  };\n\n  // Canvas drag handlers\n  const handleMouseDown = useCallback(e => {\n    if (e.button === 0 && e.target === e.currentTarget) {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y\n      });\n    }\n  }, [position]);\n  const handleMouseMove = useCallback(e => {\n    if (isDragging) {\n      const newX = e.clientX - dragStart.x;\n      const newY = e.clientY - dragStart.y;\n      setPosition({\n        x: newX,\n        y: newY,\n        gridX: -newX,\n        gridY: -newY\n      });\n    }\n  }, [isDragging, dragStart]);\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridPattern, {\n      x: position.gridX || 0,\n      y: position.gridY || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      onDoubleClick: handleDoubleClick,\n      style: {\n        transform: `translate(${position.x}px, ${position.y}px)`\n      },\n      children: nodes.map(node => /*#__PURE__*/_jsxDEV(NodeInput, {\n        position: node.position,\n        onComplete: data => handleNodeComplete(node.id, data),\n        onDragEnd: newPosition => handleNodeDragEnd(node.id, newPosition)\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"ySD45dxBzQt6LpFhQPwIFOlrqyI=\");\n_c4 = Whiteboard;\nexport default Whiteboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WhiteboardContainer\");\n$RefreshReg$(_c2, \"GridPattern\");\n$RefreshReg$(_c3, \"Canvas\");\n$RefreshReg$(_c4, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useCallback","styled","Node","VscAdd","NodeInput","jsxDEV","_jsxDEV","WhiteboardContainer","div","props","theme","terminal","bg","_c","GridPattern","text","x","y","_c2","Canvas","_c3","AddButton","button","border","boxShadow","Whiteboard","_s","nodes","setNodes","position","setPosition","dragStart","setDragStart","isDragging","setIsDragging","handleDoubleClick","e","target","currentTarget","rect","getBoundingClientRect","newNode","id","Date","now","clientX","left","clientY","top","prevNodes","handleNodeComplete","nodeId","data","filter","node","map","handleNodeDragEnd","newPosition","handleMouseDown","handleMouseMove","newX","newY","gridX","gridY","handleMouseUp","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","onDoubleClick","style","transform","onComplete","onDragEnd","_c4","$RefreshReg$"],"sources":["/Users/alexandertraykov/Documents/Documents/synapse-sys/src/components/Whiteboard.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Node from './Node';\nimport { VscAdd } from 'react-icons/vsc';\nimport NodeInput from './NodeInput';\n\nconst WhiteboardContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  background: ${props => props.theme.terminal.bg};\n`;\n\n// Separate component for the grid pattern that moves with the canvas\nconst GridPattern = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: radial-gradient(\n    circle at center,\n    ${props => props.theme.terminal.text}20 1px,\n    transparent 1px\n  );\n  background-size: 24px 24px;\n  background-position: ${props => props.x}px ${props => props.y}px;\n  pointer-events: none;\n  will-change: background-position;\n  transition: background-position 0.1s linear;\n`;\n\nconst Canvas = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  cursor: grab;\n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst AddButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: ${props => props.theme.terminal.bg};\n  color: ${props => props.theme.terminal.text};\n  border: 2px solid ${props => props.theme.terminal.border};\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 16px;\n  box-shadow: 0 0 5px ${props => props.theme.terminal.boxShadow};\n  z-index: 1000;\n  \n  &:hover {\n    background: ${props => props.theme.terminal.text};\n    color: ${props => props.theme.terminal.bg};\n  }\n`;\n\nconst Whiteboard = () => {\n  const [nodes, setNodes] = useState([]);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleDoubleClick = (e) => {\n    if (e.target === e.currentTarget) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const newNode = {\n        id: Date.now(),\n        position: {\n          x: e.clientX - rect.left - position.x,\n          y: e.clientY - rect.top - position.y\n        }\n      };\n      setNodes(prevNodes => [...prevNodes, newNode]);\n    }\n  };\n\n  const handleNodeComplete = (nodeId, data) => {\n    if (!data) {\n      // Remove node if data is null (cancelled or deleted)\n      setNodes(prevNodes => prevNodes.filter(node => node.id !== nodeId));\n      return;\n    }\n\n    // Update node with completed data\n    setNodes(prevNodes => prevNodes.map(node => \n      node.id === nodeId \n        ? { ...node, ...data }\n        : node\n    ));\n  };\n\n  const handleNodeDragEnd = (nodeId, newPosition) => {\n    setNodes(prevNodes => prevNodes.map(node => \n      node.id === nodeId \n        ? { ...node, position: newPosition }\n        : node\n    ));\n  };\n\n  // Canvas drag handlers\n  const handleMouseDown = useCallback((e) => {\n    if (e.button === 0 && e.target === e.currentTarget) {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y\n      });\n    }\n  }, [position]);\n\n  const handleMouseMove = useCallback((e) => {\n    if (isDragging) {\n      const newX = e.clientX - dragStart.x;\n      const newY = e.clientY - dragStart.y;\n      \n      setPosition({\n        x: newX,\n        y: newY,\n        gridX: -newX,\n        gridY: -newY\n      });\n    }\n  }, [isDragging, dragStart]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  return (\n    <WhiteboardContainer>\n      <GridPattern \n        x={position.gridX || 0} \n        y={position.gridY || 0} \n      />\n      <Canvas\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        onMouseMove={handleMouseMove}\n        onDoubleClick={handleDoubleClick}\n        style={{\n          transform: `translate(${position.x}px, ${position.y}px)`\n        }}\n      >\n        {nodes.map(node => (\n          <NodeInput \n            key={node.id}\n            position={node.position}\n            onComplete={(data) => handleNodeComplete(node.id, data)}\n            onDragEnd={(newPosition) => handleNodeDragEnd(node.id, newPosition)}\n          />\n        ))}\n      </Canvas>\n    </WhiteboardContainer>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}